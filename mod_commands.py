import asyncio
from pathlib import Path

import discord
from discord import app_commands
from discord.utils import get
from datetime import datetime, timedelta, timezone
from typing import Optional

from api_handler import fetch_current_war
from clan_war import ClanWarHandler
from database import remove_warning, fetch_warnings, notify_single_warning, get_all_links, remove_coc_link, add_coc_link


async def setup_mod_commands(bot):
    # Pomocn√° funkce pro automatick√© maz√°n√≠ ephemer√°ln√≠ch zpr√°v
    async def auto_delete_ephemeral(message: discord.Message | discord.Interaction, delay: int = 180):
        """Automatically delete ephemeral message after specified delay"""
        try:
            await asyncio.sleep(delay)
            if isinstance(message, discord.Interaction):
                if message.response.is_done():
                    await message.delete_original_response()
            else:
                await message.delete()
        except (discord.NotFound, discord.HTTPException):
            pass

    async def send_ephemeral(interaction: discord.Interaction, content: str, delete_after: int = 180, **kwargs):
        """Helper function to send ephemeral messages with auto-delete"""
        if interaction.response.is_done():
            msg = await interaction.followup.send(content, ephemeral=True, **kwargs)
        else:
            msg = await interaction.response.send_message(content, ephemeral=True, **kwargs)

        if delete_after and delete_after > 0:
            asyncio.create_task(auto_delete_ephemeral(msg, delete_after))
        return msg

    @bot.tree.command(name="clear", description="Vyƒçist√≠ kan√°l nebo zadan√Ω poƒçet zpr√°v", guild=bot.guild_object)
    @app_commands.describe(pocet="Kolik zpr√°v smazat (nebo pr√°zdn√© = kompletn√≠ vymaz√°n√≠)")
    async def clear(interaction: discord.Interaction, pocet: int = 0):
        if not interaction.user.guild_permissions.manage_messages:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        await interaction.response.defer(ephemeral=True, thinking=True)

        try:
            total_deleted = 0
            if pocet > 0:
                deleted = await interaction.channel.purge(limit=pocet)
                total_deleted = len(deleted)
            else:
                while True:
                    deleted = await interaction.channel.purge(limit=100)
                    total_deleted += len(deleted)
                    if len(deleted) < 100:
                        break

            await send_ephemeral(interaction, f"‚úÖ Vymaz√°no {total_deleted} zpr√°v v kan√°lu.")
        except discord.Forbidden:
            await send_ephemeral(interaction, "‚ùå Nem√°m pr√°vo mazat zpr√°vy v tomto kan√°lu.")
        except Exception as e:
            await send_ephemeral(interaction, f"‚ùå Do≈°lo k chybƒõ p≈ôi maz√°n√≠ zpr√°v: {e}")

    @bot.tree.command(name="lock", description="Uzamkne kan√°l pro psan√≠", guild=bot.guild_object)
    @app_commands.describe(duvod="D≈Øvod pro uzamƒçen√≠ kan√°lu")
    async def lock(interaction: discord.Interaction, duvod: str = None):
        if not interaction.user.guild_permissions.manage_channels:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        overwrite = interaction.channel.overwrites_for(interaction.guild.default_role)
        overwrite.send_messages = False
        await interaction.channel.set_permissions(interaction.guild.default_role, overwrite=overwrite)

        embed = discord.Embed(
            title="üîí Kan√°l uzamƒçen",
            description=f"Moder√°tor {interaction.user.mention} uzamkl tento kan√°l." + (
                f"\n**D≈Øvod:** {duvod}" if duvod else ""),
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed)

    @bot.tree.command(name="unlock", description="Odemkne kan√°l pro psan√≠", guild=bot.guild_object)
    async def unlock(interaction: discord.Interaction):
        if not interaction.user.guild_permissions.manage_channels:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        overwrite = interaction.channel.overwrites_for(interaction.guild.default_role)
        overwrite.send_messages = None
        await interaction.channel.set_permissions(interaction.guild.default_role, overwrite=overwrite)

        embed = discord.Embed(
            title="üîì Kan√°l odemknut",
            description=f"Moder√°tor {interaction.user.mention} odemkl tento kan√°l.",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed)

    @bot.tree.command(name="timeout", description="Umlƒç√≠ u≈æivatele na urƒçitou dobu", guild=bot.guild_object)
    @app_commands.describe(
        uzivatel="U≈æivatel, kter√©ho chce≈° umlƒçet",
        minuty="Doba umlƒçen√≠ v minut√°ch",
        duvod="D≈Øvod pro umlƒçen√≠"
    )
    async def timeout(interaction: discord.Interaction, uzivatel: discord.Member, minuty: int, duvod: str = None):
        if not interaction.user.guild_permissions.moderate_members:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        duration = timedelta(minutes=minuty)
        await uzivatel.timeout(duration, reason=duvod)

        embed = discord.Embed(
            title="‚è≥ U≈æivatel umlƒçen",
            description=f"{uzivatel.mention} byl umlƒçen na {minuty} minut." + (
                f"\n**D≈Øvod:** {duvod}" if duvod else ""),
            color=discord.Color.orange()
        )
        await interaction.response.send_message(embed=embed)

    @bot.tree.command(name="untimeout", description="Zru≈°√≠ umlƒçen√≠ u≈æivatele", guild=bot.guild_object)
    @app_commands.describe(uzivatel="U≈æivatel, kter√©mu chce≈° zru≈°it umlƒçen√≠")
    async def untimeout(interaction: discord.Interaction, uzivatel: discord.Member):
        if not interaction.user.guild_permissions.moderate_members:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        await uzivatel.timeout(None)

        embed = discord.Embed(
            title="üîä Umlƒçen√≠ zru≈°eno",
            description=f"{uzivatel.mention} m≈Ø≈æe znovu ps√°t.",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed)

    @bot.tree.command(name="kick", description="Vyhod√≠ u≈æivatele ze serveru", guild=bot.guild_object)
    @app_commands.describe(
        uzivatel="U≈æivatel, kter√©ho chce≈° vyhodit",
        duvod="D≈Øvod pro vyhozen√≠"
    )
    async def kick(interaction: discord.Interaction, uzivatel: discord.Member, duvod: str = None):
        if not interaction.user.guild_permissions.kick_members:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        await uzivatel.kick(reason=duvod)

        embed = discord.Embed(
            title="üë¢ U≈æivatel vyhozen",
            description=f"{uzivatel.display_name} byl vyhozen ze serveru." + (f"\n**D≈Øvod:** {duvod}" if duvod else ""),
            color=discord.Color.red()
        )
        await interaction.response.send_message(embed=embed)

    @bot.tree.command(name="slowmode", description="Nastav√≠ slowmode v kan√°lu", guild=bot.guild_object)
    @app_commands.describe(
        sekundy="Poƒçet sekund mezi zpr√°vami (0 pro vypnut√≠)"
    )
    async def slowmode(interaction: discord.Interaction, sekundy: int):
        if not interaction.user.guild_permissions.manage_channels:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        if sekundy < 0 or sekundy > 21600:
            await send_ephemeral(interaction, "‚ùå Slowmode mus√≠ b√Ωt mezi 0 a 21600 sekundami (6 hodin).")
            return

        await interaction.channel.edit(slowmode_delay=sekundy)

        if sekundy == 0:
            await interaction.response.send_message("‚úÖ Slowmode vypnut.")
        else:
            await interaction.response.send_message(f"‚úÖ Slowmode nastaven na {sekundy} sekund.")

    @bot.tree.command(
        name="pridej_varovani",
        description="Navrhne varov√°n√≠ pro hr√°ƒçe podle CoC tagu",
        guild=bot.guild_object
    )
    @app_commands.describe(
        coc_tag="Clash of Clans tag hr√°ƒçe",
        date_time="Datum a ƒças (DD/MM/YYYY HH:MM)",
        reason="D≈Øvod varov√°n√≠"
    )
    async def pridej_varovani(
            interaction: discord.Interaction,
            coc_tag: str,
            reason: str = "Bez udan√©ho d≈Øvodu",
            date_time: str | None = None
    ):
        await interaction.response.defer(ephemeral=True, thinking=True)

        if not coc_tag.startswith("#"):
            coc_tag = f"#{coc_tag}"

        if date_time:
            try:
                datetime.strptime(date_time, "%d/%m/%Y %H:%M")
            except ValueError:
                await send_ephemeral(interaction,
                                     "‚ùå Neplatn√Ω form√°t ƒçasu. Pou≈æij form√°t `DD/MM/YYYY HH:MM`, nap≈ô. `14/05/2025 18:30`.")
                return
        else:
            date_time = datetime.now().strftime("%d/%m/%Y %H:%M")

        try:
            await notify_single_warning(interaction.client, coc_tag, date_time, reason)
            await send_ephemeral(interaction, f"‚úÖ N√°vrh varov√°n√≠ pro {coc_tag} byl odesl√°n ke schv√°len√≠.")
        except Exception as e:
            await send_ephemeral(interaction, f"‚ùå Chyba p≈ôi vytv√°≈ôen√≠ varov√°n√≠: {e}")
            print(f"‚ùå [slash/pridej_varovani] {e}")

    @bot.tree.command(
        name="vypis_varovani",
        description="Vyp√≠≈°e v≈°echna varov√°n√≠ (jen pro tebe)",
        guild=bot.guild_object,
    )
    async def list_warnings_cmd(interaction: discord.Interaction):
        if not interaction.user.guild_permissions.moderate_members:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        await interaction.response.defer(ephemeral=True)

        rows = fetch_warnings()
        all_links = get_all_links()

        if not rows:
            await send_ephemeral(interaction, "üòä Nenalezeno ≈æ√°dn√© varov√°n√≠.")
            return

        header = "üî∂ **Seznam varov√°n√≠**\n"
        lines = []

        for i, (tag, dt, reason) in enumerate(rows, 1):
            coc_name = next((name for _, (t, name) in all_links.items() if t == tag), "Nezn√°m√Ω hr√°ƒç")
            lines.append(f"{i}. {tag} ({coc_name}) | {dt} | {reason}")

        msg = header + "\n".join(lines)

        for start in range(0, len(msg), 1990):
            await send_ephemeral(interaction, msg[start: start + 1990])

    @bot.tree.command(name="odeber_varovani", description="Odstran√≠ konkr√©tn√≠ varov√°n√≠ (mus√≠ to b√Ωt 1:1 napsan√©",
                      guild=bot.guild_object)
    @app_commands.describe(
        coc_tag="Tag hr√°ƒçe",
        date_time="Datum a ƒças varov√°n√≠ (DD/MM/YYYY HH:MM)",
        reason="P≈ôesn√Ω d≈Øvod varov√°n√≠"
    )
    async def remove_warning_cmd(interaction: discord.Interaction, coc_tag: str, date_time: str, reason: str):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return
        remove_warning(coc_tag, date_time, reason)
        await send_ephemeral(interaction, "üóëÔ∏è Varov√°n√≠ odstranƒõno (pokud existovalo).")

    @bot.tree.command(
        name="kdo_neodehral",
        description="Vyp√≠≈°e hr√°ƒçe, kte≈ô√≠ dosud neodehr√°li √∫tok ve v√°lce.",
        guild=bot.guild_object
    )
    @app_commands.describe(
        zbyva="Zobrazit hr√°ƒçe, kte≈ô√≠ maj√≠ je≈°tƒõ zb√Ωvaj√≠c√≠ √∫toky (default: False, zobraz√≠ hr√°ƒçe bez √∫tok≈Ø)"
    )
    async def kdo_neodehral(interaction: discord.Interaction, zbyva: bool = False):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze moder√°tor.")
            return

        await interaction.response.defer(ephemeral=True, thinking=True)

        clan_war_handler = getattr(bot, "clan_war_handler", None)
        if clan_war_handler is None:
            clan_war_handler = ClanWarHandler(bot, bot.config)
            bot.clan_war_handler = clan_war_handler

        war_data = await fetch_current_war(bot.clan_tag, bot.config)
        if not war_data or war_data.get("state") is None:
            await send_ephemeral(interaction, "‚ùå Nepoda≈ôilo se z√≠skat data o aktu√°ln√≠ klanov√© v√°lce.")
            return

        state = war_data["state"]

        if state == "notInWar":
            await send_ephemeral(interaction, "‚öîÔ∏è Moment√°lnƒõ neprob√≠h√° ≈æ√°dn√° klanov√° v√°lka.")
            return

        if state == "preparation":
            await send_ephemeral(interaction, "üõ°Ô∏è V√°lka je ve f√°zi p≈ô√≠pravy. √ötoky zat√≠m nelze prov√°dƒõt.")
            return

        async def format_missing_players(members, prefix):
            if not members:
                await send_ephemeral(interaction, f"{prefix} V≈°ichni ƒçlenov√© klanu ji≈æ provedli sv√© √∫toky.")
                return

            await send_ephemeral(interaction, prefix)

            batch = []
            for m in members:
                tag = m["tag"]
                name = m["name"].replace('_', r'\_').replace('*', r'\*')
                mention = await clan_war_handler._get_discord_mention(tag)
                batch.append(mention if mention else f"@{name}")

                if len(batch) >= 5:
                    await send_ephemeral(interaction, " ".join(batch) + " .")
                    batch = []

            if batch:
                await send_ephemeral(interaction, " ".join(batch) + " .")

        if state == "warEnded":
            if zbyva:
                missing = [m for m in war_data["clan"]["members"] if
                           len(m.get("attacks", [])) < war_data.get("attacksPerMember", 1)]
            else:
                missing = [m for m in war_data["clan"]["members"] if not m.get("attacks")]
            await format_missing_players(missing, "üèÅ V√°lka ji≈æ skonƒçila. √ötok neprovedli:")
            return

        attacks_per_member = war_data.get("attacksPerMember", 1)
        if zbyva:
            missing = [m for m in war_data["clan"]["members"] if len(m.get("attacks", [])) < attacks_per_member]
        else:
            missing = [m for m in war_data["clan"]["members"] if len(m.get("attacks", [])) == 0]

        end_time = clan_war_handler._parse_coc_time(war_data.get('endTime', ''))
        if end_time:
            remaining = end_time - datetime.now(timezone.utc)
            hours = remaining.seconds // 3600
            minutes = (remaining.seconds % 3600) // 60
            time_info = f" (zb√Ωv√° {hours}h {minutes}m)"
        else:
            time_info = ""

        if zbyva:
            await format_missing_players(missing, f"‚öîÔ∏è Prob√≠h√° v√°lka{time_info}. Hr√°ƒçi s alespo≈à 1 zb√Ωvaj√≠c√≠m √∫tokem:")
        else:
            await format_missing_players(missing, f"‚öîÔ∏è Prob√≠h√° v√°lka{time_info}. Hr√°ƒçi, kte≈ô√≠ neprovedli ≈æ√°dn√Ω √∫tok:")

    @bot.tree.command(
        name="propoj_ucet",
        description="Propoj√≠ zadan√Ω Discord √∫ƒçet s Clash of Clans √∫ƒçtem a p≈ôi≈ôad√≠ roli.",
        guild=bot.guild_object
    )
    @app_commands.describe(
        uzivatel="Discord u≈æivatel k propojen√≠",
        coc_tag="Clash of Clans tag (nap≈ô. #ABC123)",
        coc_name="Jm√©no v Clash of Clans"
    )
    async def propojit_ucet(
            interaction: discord.Interaction,
            uzivatel: discord.Member,
            coc_tag: str,
            coc_name: str
    ):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze administr√°tor.")
            return

        coc_tag = coc_tag.upper()
        if not coc_tag.startswith("#"):
            coc_tag = f"#{coc_tag}"

        try:
            add_coc_link(str(uzivatel.id), coc_tag, coc_name)

            role = interaction.guild.get_role(1365768439473373235)
            if role:
                try:
                    await uzivatel.add_roles(role, reason="Propojen√≠ Clash of Clans √∫ƒçtu")
                except discord.Forbidden:
                    await send_ephemeral(interaction, "‚ö†Ô∏è Nepoda≈ôilo se p≈ôi≈ôadit roli ‚Äì chyb√≠ opr√°vnƒõn√≠.")

            await interaction.response.send_message(
                f"‚úÖ √öƒçet **{coc_name}** ({coc_tag}) byl propojen s {uzivatel.mention} a byla mu p≈ôi≈ôazena role.",
                ephemeral=False
            )

            try:
                await uzivatel.send(
                    f"üîó Tv≈Øj Discord √∫ƒçet byl propojen s Clash of Clans √∫ƒçtem **{coc_name}** (`{coc_tag}`).")
            except Exception:
                pass

        except Exception as e:
            await send_ephemeral(interaction, f"‚ùå Nepoda≈ôilo se ulo≈æit propojen√≠: {e}")

    @bot.tree.command(
        name="odpoj_ucet",
        description="Odpoj√≠ Clash of Clans √∫ƒçet od Discord u≈æivatele a odebere roli.",
        guild=bot.guild_object
    )
    @app_commands.describe(
        uzivatel="Discord u≈æivatel k odpojen√≠ (pokud vynech√°≈°, odpoj√≠ tebe)"
    )
    async def odpoj_ucet(
            interaction: discord.Interaction,
            uzivatel: discord.Member | None = None
    ):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze administr√°tor.")
            return

        uzivatel = uzivatel or interaction.user

        try:
            remove_coc_link(str(uzivatel.id))

            role = interaction.guild.get_role(1365768439473373235)
            if role and role in uzivatel.roles:
                try:
                    await uzivatel.remove_roles(role, reason="Odpojen√≠ Clash of Clans √∫ƒçtu")
                except discord.Forbidden:
                    await send_ephemeral(interaction, "‚ö†Ô∏è Nepoda≈ôilo se odebrat roli ‚Äì chyb√≠ opr√°vnƒõn√≠.")

            await interaction.response.send_message(
                f"üóëÔ∏è Propojen√≠ bylo odstranƒõno a roli jsem odebral u≈æivateli {uzivatel.mention}.",
                ephemeral=False
            )

            try:
                await uzivatel.send("üîå Tv√© propojen√≠ s Clash of Clans √∫ƒçtem bylo zru≈°eno a role odebr√°na.")
            except Exception:
                pass

        except Exception as e:
            await send_ephemeral(interaction, f"‚ùå Nepoda≈ôilo se odpojit √∫ƒçet: {e}")

    @bot.tree.command(
        name="seznam_propojeni",
        description="Vyp√≠≈°e seznam v≈°ech Discord ‚Üî CoC propojen√≠.",
        guild=bot.guild_object
    )
    async def seznam_propojeni(interaction: discord.Interaction):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze administr√°tor.")
            return

        try:
            links = get_all_links()
        except Exception as e:
            await send_ephemeral(interaction, f"‚ùå Chyba p≈ôi ƒçten√≠ datab√°ze: {e}")
            return

        if not links:
            await send_ephemeral(interaction, "‚ÑπÔ∏è Zat√≠m nejsou ≈æ√°dn√° propojen√≠.")
            return

        lines = ["**Seznam propojen√Ωch √∫ƒçt≈Ø:**"]
        for discord_id, (tag, name) in links.items():
            lines.append(f"- <@{discord_id}> ‚Üí **{name}** (`{tag}`)")

        await send_ephemeral(interaction, "\n".join(lines), delete_after=300)  # 5 minut pro del≈°√≠ v√Ωpisy

    @bot.tree.command(name="pravidla_discord", description="Zobraz√≠ pravidla Discord serveru", guild=bot.guild_object)
    async def pravidla_discord(interaction: discord.Interaction):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze administr√°tor.")
            return

        await send_ephemeral(interaction, "Pravidla zobrazena", delete_after=1)

        embed = discord.Embed(
            title="üìú Pravidla Discord serveru",
            description="Pravidla pro v≈°echny ƒçleny na≈°eho Discord serveru:",
            color=discord.Color.blue()
        )

        embed.add_field(
            name="1. Chov√°n√≠ a komunikace",
            value="‚Ä¢ Respektujte v≈°echny ƒçleny serveru\n"
                  "‚Ä¢ ≈Ω√°dn√© ur√°≈æky, rasismus, sexismu nebo jin√° forma diskriminace\n"
                  "‚Ä¢ Mluvte v√Ωhradnƒõ ƒçesky\n"
                  "‚Ä¢ ≈Ω√°dn√© spammov√°n√≠ nebo floodov√°n√≠ zpr√°vami\n"
                  "‚Ä¢ Dodr≈æujte t√©mata kan√°l≈Ø",
            inline=False
        )

        embed.add_field(
            name="2. Sd√≠len√≠ obsahu",
            value="‚Ä¢ Odkazy sm√≠te pos√≠lat pouze pokud se t√Ωkaj√≠ kontextu konverzace\n"
                  "‚Ä¢ Zak√°z√°ny jsou n√°hodn√© Discord invite nebo reklamy\n"
                  "‚Ä¢ NSFW obsah je striktnƒõ zak√°z√°n",
            inline=False
        )

        embed.add_field(
            name="3. Role a opr√°vnƒõn√≠",
            value="‚Ä¢ Ne≈æ√°dejte o vy≈°≈°√≠ role - ty se p≈ôidƒõluj√≠ podle postaven√≠ v klanu\n"
                  "‚Ä¢ Zneu≈æ√≠v√°n√≠ rol√≠ nebo bot≈Ø bude potrest√°no\n"
                  "‚Ä¢ Moder√°to≈ôi maj√≠ v≈ædy pravdu",
            inline=False
        )

        embed.add_field(
            name="4. Hlasov√© kan√°ly",
            value="‚Ä¢ Respektujte toho, kdo mluv√≠\n"
                  "‚Ä¢ ≈Ω√°dn√© ru≈°en√≠ hlukem v pozad√≠\n"
                  "‚Ä¢ Hudba pouze v urƒçen√Ωch kan√°lech",
            inline=False
        )

        embed.set_footer(text="Poru≈°en√≠ pravidel m≈Ø≈æe v√©st k mute, kick nebo banu, podle z√°va≈ænosti p≈ôestupku")

        await interaction.response.send_message("Pravidla zobrazena", ephemeral=True, delete_after=1)
        await interaction.channel.send(embed=embed)

    @bot.tree.command(name="pravidla_clan", description="Zobraz√≠ pravidla hern√≠ho klanu", guild=bot.guild_object)
    async def pravidla_clan(interaction: discord.Interaction):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze administr√°tor.")
            return

        await send_ephemeral(interaction, "Pravidla zobrazena", delete_after=1)

        embed = discord.Embed(
            title="‚öîÔ∏è Pravidla Klanu Czech Heroes",
            description="Pravidla pro v≈°echny ƒçleny na≈°eho hern√≠ho klanu:",
            color=discord.Color.gold()
        )

        # Sekce obecn√° pravidla
        embed.add_field(
            name="üîπ Obecn√° pravidla",
            value="‚Ä¢ Minim√°ln√≠ aktivita 3 dny - po del≈°√≠ neaktivitƒõ hroz√≠ kick\n"
                  "‚Ä¢ Clan Games: od ka≈æd√©ho oƒçek√°v√°me minim√°lnƒõ 1000 bod≈Ø\n"
                  "‚Ä¢ Clan Capital: povinn√© vyu≈æ√≠t v≈°ech 6 √∫tok≈Ø\n"
                  "‚Ä¢ Donate: darujte co to jde, ide√°lnƒõ nem√≠t donate na 0",
            inline=False
        )

        # V√Ωraznƒõ zv√Ωraznƒõn√° sekce Clan War
        embed.add_field(
            name="‚öîÔ∏è CLAN WAR - NEJD≈ÆLE≈ΩITƒöJ≈†√ç PRAVIDLA",
            value="```diff\n"
                  "+ 1. √∫tok: V≈ΩDY MIRROR (stejn√© ƒç√≠slo)\n"
                  "+ Ide√°lnƒõ odehr√°t p≈ôed 5. hodinou do konce v√°lky\n\n"
                  "+ 2. √∫tok: oprava nƒõjak√©ho ciz√≠ho √∫toku\n"
                  "+ Nebo na koho chcete, pokud zb√Ωv√° m√©nƒõ ne≈æ 5h do konce CW\n\n"
                  "! Neodehr√°n√≠ √∫toku = VAROV√ÅN√ç\n"
                  "```",
            inline=False
        )

        # Sekce p≈ôihla≈°ov√°n√≠ do waru
        embed.add_field(
            name="üìù P≈ôihla≈°ov√°n√≠ do Clan War",
            value="‚Ä¢ P√°r hodin p≈ôed zaƒç√°tkem v√°lky po≈°lu \"Clan War Sign-Up\"\n"
                  "‚Ä¢ Palec nahoru = 100% √∫ƒçast (mus√≠≈° dodr≈æet pravidla)\n"
                  "‚Ä¢ Palec dol≈Ø = 100% nebude≈° ve v√°lce\n"
                  "‚Ä¢ Nereaguje≈° + zelen√Ω ≈°t√≠t = mo≈æn√° √∫ƒçast (dopl≈àujeme poƒçet)\n"
                  "‚Ä¢ Nereaguje≈° + ƒçerven√Ω ≈°t√≠t = nebude≈° ve v√°lce",
            inline=False
        )

        embed.add_field(
            name="‚ÑπÔ∏è Pozn√°mky",
            value="‚Ä¢ V√°lky v≈ædy zaƒç√≠naj√≠ ve veƒçern√≠ch hodin√°ch (17-24)\n"
                  "‚Ä¢ Pravidla se mohou v budoucnu zmƒõnit\n"
                  "‚Ä¢ Kicknut√≠ ƒçlenov√© mohou dostat pozv√°nku zp√°tky pokud v√≠m ≈æe byly aktivn√≠",
            inline=False
        )

        embed.set_footer(text="Po 3 varov√°n√≠ch hroz√≠ kick z klanu")

        await interaction.response.send_message("Pravidla zobrazena", ephemeral=True, delete_after=1)
        await interaction.channel.send(embed=embed)

    @bot.tree.command(name="vitej", description="V√≠tej na na≈°em Discord serveru", guild=bot.guild_object)
    async def vitej(interaction: discord.Interaction):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze administr√°tor.")
            return

        await send_ephemeral(interaction, "V√≠tej zpr√°va odesl√°na", delete_after=1)

        embed = discord.Embed(
            title="üéâ V√≠tej na Discord serveru Czech Heroes!",
            description="Ofici√°ln√≠ Discord pro hern√≠ klan **Czech Heroes** ze hry Clash of Clans!",
            color=discord.Color.green()
        )

        # Sekce pro ƒçleny klanu
        embed.add_field(
            name="üîπ Jsi ƒçlenem na≈°eho klanu?",
            value=(
                f"1. Projdi si pravidla v {interaction.guild.get_channel(1366000196991062086).mention}\n"
                f"2. Proveƒè ovƒõ≈ôen√≠ v {interaction.guild.get_channel(1366471838070476821).mention}\n"
                "3. Po ovƒõ≈ôen√≠ z√≠sk√°≈° automaticky:\n"
                "   - Speci√°ln√≠ roli podle postaven√≠ v klanu (Leader, Co-leader, Elder...)\n"
                "   - Role na m√≠ru podle poƒçtu poh√°rk≈Ø, TH level, Liga\n"
                "   - P≈ôezd√≠vka na Discord serveru nastavena na hern√≠ jm√©no"
                "   - P≈ô√≠stup ke v≈°em sekc√≠m serveru"
            ),
            inline=False
        )

        # Sekce pro n√°v≈°tƒõvn√≠ky
        embed.add_field(
            name="üîπ Jsi n√°v≈°tƒõvn√≠k?",
            value=(
                "I pro tebe m√°me omezen√Ω p≈ô√≠stup(nƒõkdy):\n"
                "- M≈Ø≈æe≈° pokecat v obecn√Ωch chatech\n"
                "- Pod√≠vat se na pravidla\n"
                "- P≈ô√≠padnƒõ se p≈ôipojit do klanu a proj√≠t plnou verifikac√≠"
            ),
            inline=False
        )

        # Sekce s v√Ωhodami serveru
        embed.add_field(
            name="üìä Co v≈°echno zde najde≈°?",
            value=(
                f"- P≈ôehledn√© statistiky o Clan War v {interaction.guild.get_channel(1366835944174391379).mention}\n"
                f"   - Aktu√°ln√≠ Clan War √∫toky a obrany v {interaction.guild.get_channel(1366835971395686554).mention}\n"
                f"- Detaily o Clan Capital v {interaction.guild.get_channel(1370467834932756600).mention}\n"
                f"- Hern√≠ eventy v {interaction.guild.get_channel(1367054076688339053).mention}\n"
                f"- M√≠sto pro obecn√Ω pokec v {interaction.guild.get_channel(1370722795826450452).mention}\n"
                "- Tipy a triky jak hr√°t l√©pe\n"
                "- A mnohem v√≠ce!"
            ),
            inline=False
        )

        embed.set_footer(text="Tƒõ≈°√≠me se na tebe v na≈°em klanu i na Discordu!")

        await interaction.response.send_message("V√≠tej zpr√°va odesl√°na", ephemeral=True, delete_after=1)
        await interaction.channel.send(embed=embed)

    @bot.tree.command(
        name="vypis_log",
        description="Vyp√≠≈°e posledn√≠ ≈ô√°dky z log souboru (pouze pro administr√°tory)",
        guild=bot.guild_object
    )
    @app_commands.describe(
        pocet_radku="Kolik posledn√≠ch ≈ô√°dk≈Ø zobrazit (default: 50, max: 500)"
    )
    async def vypis_log(interaction: discord.Interaction, pocet_radku: int = 50):
        if not interaction.user.guild_permissions.administrator:
            await send_ephemeral(interaction, "‚ùå Tento p≈ô√≠kaz m≈Ø≈æe pou≈æ√≠t pouze administr√°tor.")
            return

        pocet_radku = min(max(pocet_radku, 1), 500)
        await interaction.response.defer(ephemeral=True, thinking=True)

        log_file = Path(__file__).parent / "CoCDiscordBot.log"

        try:
            with open(log_file, "r", encoding="utf-8") as f:
                lines = f.readlines()

            if not lines:
                await send_ephemeral(interaction, "‚ÑπÔ∏è Log soubor je pr√°zdn√Ω.")
                return

            last_lines = lines[-pocet_radku:]
            current_chunk = []
            current_length = 0

            for line in last_lines:
                line_length = len(line)

                if current_length + line_length > 1900:
                    if current_chunk:
                        await send_ephemeral(interaction, f"```\n{''.join(current_chunk)}\n```", delete_after=300)
                        current_chunk = []
                        current_length = 0

                    if line_length > 1900:
                        parts = [line[i:i + 1900] for i in range(0, len(line), 1900)]
                        for part in parts[:-1]:
                            await send_ephemeral(interaction, f"```\n{part}\n```", delete_after=300)
                        line = parts[-1]
                        line_length = len(line)

                current_chunk.append(line)
                current_length += line_length

            if current_chunk:
                await send_ephemeral(interaction, f"```\n{''.join(current_chunk)}\n```", delete_after=300)

        except FileNotFoundError:
            await send_ephemeral(interaction, f"‚ùå Log soubor '{log_file}' nebyl nalezen.")
        except Exception as e:
            await send_ephemeral(interaction, f"‚ùå Chyba p≈ôi ƒçten√≠ log souboru: {e}")