import discord
from typing import Optional
import json
import os
from api_handler import fetch_events_from_clash_ninja
from datetime import datetime

EVENT_EMOJIS = {
    "Raid Weekend": "<:clan_capital:1370710098158026792>",
    "Trader Refresh": "<:trader:1370708896964022324>",
    "Clan Games": "<:clan_games:1370709757761028187>",
    "League Reset": "<:league_unranked:1365740650351558787>",
    "Season End": "<:free_battlepass:1370713363188813865>",
    "CWL": "<:clan_war_league:1370712275614302309>",
}


# === Cesta k JSONu ===
THIS_DIR = os.path.dirname(os.path.abspath(__file__))
ROOM_IDS_PATH = os.path.join(THIS_DIR, "discord_rooms_ids.json")

def load_room_id(key: str):
    if os.path.exists(ROOM_IDS_PATH):
        try:
            with open(ROOM_IDS_PATH, "r") as f:
                data = json.load(f)
                return data.get(key)
        except Exception as e:
            print(f"‚ùå [discord_rooms_ids] Chyba p≈ôi ƒçten√≠: {e}")
    return None

def save_room_id(key: str, message_id: Optional[int]):
    try:
        data = {}
        if os.path.exists(ROOM_IDS_PATH):
            with open(ROOM_IDS_PATH, "r") as f:
                data = json.load(f)
        if message_id is None:
            data.pop(key, None)
        else:
            data[key] = message_id
        with open(ROOM_IDS_PATH, "w") as f:
            json.dump(data, f)
    except Exception as e:
        print(f"‚ùå [discord_rooms_ids] Chyba p≈ôi z√°pisu: {e}")


class GameEventsHandler:
    def __init__(self, bot, config):
        self.bot = bot
        self.config = config
        # m≈Ø≈æe b√Ωt v configu
        self.channel_id = 1367054076688339053
        # 1) zkus naƒç√≠st z JSON
        self.message_id = load_room_id("game_events_message")

    async def _ensure_message_id(self, channel: discord.TextChannel):
        """
        Zajist√≠ self.message_id tak, ≈æe:
        - buƒè funguje fetch_message(self.message_id),
        - nebo najde posledn√≠ zpr√°vu od bota v kan√°lu a ulo≈æ√≠ ji,
        - nebo po≈°le novou a ulo≈æ√≠ jej√≠ ID.
        """
        # pokud v JSON bylo ID, ovƒõ≈ô, ≈æe zpr√°va existuje
        if self.message_id:
            try:
                await channel.fetch_message(self.message_id)
                return  # v≈°e OK
            except discord.NotFound:
                print("‚ö†Ô∏è [game_events] Zpr√°va z JSONu neexistuje, zkus√≠m naj√≠t posledn√≠ bot√≠ zpr√°vu.")
                # spadneme n√≠≈æ na hled√°n√≠
            except discord.Forbidden:
                print("‚ùå [game_events] Nem√°m opr√°vnƒõn√≠ ƒç√≠st zpr√°vy v kan√°lu.")
                return
            except discord.HTTPException as e:
                print(f"‚ùå [game_events] HTTP chyba p≈ôi fetch_message: {e}")

        # 2) najdi posledn√≠ zpr√°vu od bota v historii kan√°lu
        try:
            async for m in channel.history(limit=50, oldest_first=False):
                if m.author.id == self.bot.user.id:
                    self.message_id = m.id
                    save_room_id("game_events_message", m.id)
                    print("‚úÖ [game_events] Nalezl jsem posledn√≠ bot√≠ zpr√°vu, budu ji editovat.")
                    return
        except discord.Forbidden:
            print("‚ùå [game_events] Nem√°m opr√°vnƒõn√≠ ƒç√≠st historii kan√°lu.")
        except Exception as e:
            print(f"‚ùå [game_events] Chyba p≈ôi proch√°zen√≠ historie: {e}")

        # 3) pokud nic, po≈°li novou placeholder zpr√°vu (bez embedu), ID si ulo≈æ√≠me a hned ji budeme editovat
        try:
            placeholder = await channel.send("‚è≥ P≈ôipravuji p≈ôehled ud√°lost√≠‚Ä¶")
            self.message_id = placeholder.id
            save_room_id("game_events_message", placeholder.id)
            print("‚úÖ [game_events] Vytvo≈ôil jsem novou referenƒçn√≠ zpr√°vu.")
        except Exception as e:
            print(f"‚ùå [game_events] Nepoda≈ôilo se vytvo≈ôit referenƒçn√≠ zpr√°vu: {e}")

    async def process_game_events(self):
        """
        Naƒçte hern√≠ ud√°losti z webu a aktualizuje nebo vytvo≈ô√≠ Discord embed zpr√°vu.
        Nikdy nepos√≠l√° duplicitn√≠ zpr√°vy ‚Äì v≈ædy edituje posledn√≠ bot√≠ zpr√°vu v kan√°lu.
        """
        channel = self.bot.get_channel(self.channel_id)
        if not channel:
            print("‚ùå [game_events] Kan√°l nenalezen.")
            return

        # Zajisti, ≈æe m√°me platn√© message_id (JSON ‚Üí historie ‚Üí nov√°)
        await self._ensure_message_id(channel)
        if not self.message_id:
            print("‚ùå [game_events] Nem√°m message_id, konƒç√≠m.")
            return

        events = fetch_events_from_clash_ninja()
        if not events:
            print("‚ùå [game_events] ≈Ω√°dn√° data o ud√°lostech.")
            return

        embed = discord.Embed(
            title="üìÜ Nadch√°zej√≠c√≠ Clash of Clans ud√°losti",
            color=discord.Color.teal()
        )

        for event in events:
            title = event['title']
            if title == "CWL":
                title = "Clan War League"
            if title == "CWL(Sign-up Until)":
                title = "CWL (P≈ôihl√°≈°ky do..)"

            emoji = EVENT_EMOJIS.get(event['title'], "üóìÔ∏è")
            field_name = f"{emoji} {title}" if not event["active"] else f"üü¢ {title} (Prob√≠h√°)"
            ts = event["timestamp"]
            if event["active"]:
                field_value = f"<t:{ts}>\nkonƒç√≠: <t:{ts}:R>"
            else:
                field_value = f"<t:{ts}>\n<t:{ts}:R>"

            embed.add_field(name=field_name, value=field_value, inline=True)

        embed.set_footer(text="Zdroj: clash.ninja")

        # teƒè u≈æ jen edituj potvrzenou zpr√°vu
        try:
            msg = await channel.fetch_message(self.message_id)
            await msg.edit(content=None, embed=embed)
            print("‚úÖ [game_events] Embed upraven.")
        except discord.NotFound:
            # v√Ωjimeƒçnƒõ pokud byla smaz√°na mezi _ensure_message_id a editac√≠
            print("‚ö†Ô∏è [game_events] Zpr√°va zmizela, vytvo≈ô√≠m novou.")
            msg = await channel.send(embed=embed)
            self.message_id = msg.id
            save_room_id("game_events_message", msg.id)
            print("‚úÖ [game_events] Nov√Ω embed odesl√°n.")
        except Exception as e:
            print(f"‚ùå [game_events] Chyba p≈ôi editaci embed zpr√°vy: {e}")
